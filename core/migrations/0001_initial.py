# Generated by Django 5.0.6 on 2024-08-05 05:42

import django.db.models.deletion
import django.db.models.manager
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hr', '0003_alter_leaves_passport_withdrawal_date'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreInventoryStg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('organization_id', models.BigIntegerField()),
                ('business_group_id', models.IntegerField(blank=True, null=True)),
                ('enable_date', models.DateField(blank=True, null=True)),
                ('disable_date', models.DateField(blank=True, null=True)),
                ('organization_code', models.CharField(blank=True, max_length=5, null=True)),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_enabled_flag', models.CharField(blank=True, max_length=225, null=True)),
                ('operating_unit_id_id', models.IntegerField(blank=True, null=True)),
                ('org_type', models.CharField(blank=True, max_length=240, null=True)),
                ('operating_unit_name', models.CharField(blank=True, max_length=240, null=True)),
                ('location_id', models.IntegerField(blank=True, null=True)),
                ('ledger_name', models.CharField(blank=True, max_length=240, null=True)),
                ('ledger_id', models.IntegerField(blank=True, null=True)),
                ('inv_org_address', models.CharField(blank=True, max_length=2000, null=True)),
                ('recv_location', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'core_inventory_stg',
                'managed': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Subinventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secondary_inventory_name', models.CharField(blank=True, max_length=10, null=True)),
                ('organization_id', models.IntegerField(blank=True, null=True)),
                ('last_update_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated_by', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_login', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('disable_date', models.DateTimeField(blank=True, null=True)),
                ('inventory_atp_code', models.IntegerField(blank=True, null=True)),
                ('availability_type', models.IntegerField(blank=True, null=True)),
                ('reservable_type', models.IntegerField(blank=True, null=True)),
                ('locator_type', models.IntegerField(blank=True, null=True)),
                ('picking_order', models.IntegerField(blank=True, null=True)),
                ('material_account', models.IntegerField(blank=True, null=True)),
                ('material_overhead_account', models.IntegerField(blank=True, null=True)),
                ('resource_account', models.IntegerField(blank=True, null=True)),
                ('overhead_account', models.IntegerField(blank=True, null=True)),
                ('outside_processing_account', models.IntegerField(blank=True, null=True)),
                ('quantity_tracked', models.IntegerField(blank=True, null=True)),
                ('asset_inventory', models.IntegerField(blank=True, null=True)),
                ('source_type', models.IntegerField(blank=True, null=True)),
                ('source_subinventory', models.CharField(blank=True, max_length=10, null=True)),
                ('source_organization_id', models.IntegerField(blank=True, null=True)),
                ('requisition_approval_type', models.IntegerField(blank=True, null=True)),
                ('expense_account', models.IntegerField(blank=True, null=True)),
                ('encumbrance_account', models.IntegerField(blank=True, null=True)),
                ('attribute_category', models.CharField(blank=True, max_length=30, null=True)),
                ('attribute1', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute2', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute3', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute4', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute5', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute6', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute7', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute8', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute9', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute10', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute11', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute12', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute13', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute14', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute15', models.CharField(blank=True, max_length=150, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('program_application_id', models.IntegerField(blank=True, null=True)),
                ('program_id', models.IntegerField(blank=True, null=True)),
                ('program_update_date', models.DateTimeField(blank=True, null=True)),
                ('preprocessing_lead_time', models.IntegerField(blank=True, null=True)),
                ('processing_lead_time', models.IntegerField(blank=True, null=True)),
                ('postprocessing_lead_time', models.IntegerField(blank=True, null=True)),
                ('demand_class', models.CharField(blank=True, max_length=30, null=True)),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('subinventory_usage', models.IntegerField(blank=True, null=True)),
                ('notify_list_id', models.IntegerField(blank=True, null=True)),
                ('pick_uom_code', models.CharField(blank=True, max_length=3, null=True)),
                ('depreciable_flag', models.IntegerField(blank=True, null=True)),
                ('location_id', models.IntegerField(blank=True, null=True)),
                ('default_cost_group_id', models.IntegerField(blank=True, null=True)),
                ('status_id', models.IntegerField(blank=True, null=True)),
                ('default_loc_status_id', models.IntegerField(blank=True, null=True)),
                ('lpn_controlled_flag', models.IntegerField(blank=True, null=True)),
                ('pick_methodology', models.IntegerField(blank=True, null=True)),
                ('cartonization_flag', models.IntegerField(blank=True, null=True)),
                ('dropping_order', models.IntegerField(blank=True, null=True)),
                ('subinventory_type', models.IntegerField(blank=True, null=True)),
                ('planning_level', models.IntegerField(blank=True, null=True)),
                ('default_count_type_code', models.IntegerField(blank=True, null=True)),
                ('enable_bulk_pick', models.CharField(blank=True, max_length=1, null=True)),
                ('enable_locator_alias', models.CharField(blank=True, max_length=1, null=True)),
                ('enforce_alias_uniqueness', models.CharField(blank=True, max_length=1, null=True)),
                ('enable_opp_cyc_count', models.CharField(blank=True, max_length=1, null=True)),
                ('opp_cyc_count_days', models.IntegerField(blank=True, null=True)),
                ('opp_cyc_count_header_id', models.IntegerField(blank=True, null=True)),
                ('opp_cyc_count_quantity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'core_subinventories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlexValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_id', models.TextField(blank=True, null=True)),
                ('flex_value_set_id', models.IntegerField()),
                ('flex_value_id', models.BigIntegerField()),
                ('flex_value', models.CharField(max_length=150)),
                ('last_update_date', models.DateField()),
                ('last_updated_by', models.BigIntegerField()),
                ('creation_date', models.DateField()),
                ('created_by', models.BigIntegerField()),
                ('last_update_login', models.BigIntegerField(blank=True, null=True)),
                ('enabled_flag', models.CharField(max_length=1)),
                ('summary_flag', models.CharField(max_length=1)),
                ('start_date_active', models.DateField(blank=True, null=True)),
                ('end_date_active', models.DateField(blank=True, null=True)),
                ('parent_flex_value_low', models.CharField(blank=True, max_length=60, null=True)),
                ('parent_flex_value_high', models.CharField(blank=True, max_length=60, null=True)),
                ('structured_hierarchy_level', models.BigIntegerField(blank=True, null=True)),
                ('hierarchy_level', models.CharField(blank=True, max_length=30, null=True)),
                ('compiled_value_attributes', models.CharField(blank=True, max_length=2000, null=True)),
                ('value_category', models.CharField(blank=True, max_length=30, null=True)),
                ('attribute1', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute2', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute3', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute4', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute5', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute6', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute7', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute8', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute9', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute10', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute11', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute12', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute13', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute14', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute15', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute16', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute17', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute18', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute19', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute20', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute21', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute22', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute23', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute24', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute25', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute26', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute27', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute28', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute29', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute30', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute31', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute32', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute33', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute34', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute35', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute36', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute37', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute38', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute39', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute40', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute41', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute42', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute43', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute44', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute45', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute46', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute47', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute48', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute49', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute50', models.CharField(blank=True, max_length=240, null=True)),
                ('flex_value_meaning', models.CharField(max_length=150)),
                ('description', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute_sort_order', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flex_values',
            },
        ),
        migrations.CreateModel(
            name='FlexValueSets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flex_value_set_id', models.IntegerField()),
                ('flex_value_set_name', models.CharField(max_length=60)),
                ('last_update_date', models.DateField()),
                ('last_updated_by', models.BigIntegerField()),
                ('creation_date', models.DateField()),
                ('created_by', models.BigIntegerField()),
                ('last_update_login', models.BigIntegerField()),
                ('validation_type', models.CharField(max_length=1)),
                ('protected_flag', models.CharField(max_length=1)),
                ('security_enabled_flag', models.CharField(max_length=1)),
                ('longlist_flag', models.CharField(max_length=1)),
                ('format_type', models.CharField(max_length=1)),
                ('maximum_size', models.IntegerField()),
                ('alphanumeric_allowed_flag', models.CharField(max_length=1)),
                ('uppercase_only_flag', models.CharField(max_length=1)),
                ('numeric_mode_enabled_flag', models.CharField(max_length=1)),
                ('description', models.CharField(blank=True, max_length=240, null=True)),
                ('dependant_default_value', models.CharField(blank=True, max_length=60, null=True)),
                ('dependant_default_meaning', models.CharField(blank=True, max_length=240, null=True)),
                ('parent_flex_value_set_id', models.IntegerField(blank=True, null=True)),
                ('minimum_value', models.CharField(blank=True, max_length=150, null=True)),
                ('maximum_value', models.CharField(blank=True, max_length=150, null=True)),
                ('number_precision', models.IntegerField(blank=True, null=True)),
                ('zd_edition_name', models.CharField(max_length=30)),
                ('zd_sync', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'flex_value_sets',
            },
        ),
        migrations.CreateModel(
            name='GlLedger',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('ledger_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('business_group_id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('chart_of_accounts_id', models.IntegerField()),
                ('period_set_name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LookupValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lookup_type', models.CharField(blank=True, max_length=50, null=True)),
                ('lookup_code', models.CharField(blank=True, max_length=50, null=True)),
                ('meaning', models.CharField(blank=True, max_length=80, null=True)),
                ('description', models.CharField(blank=True, max_length=240, null=True)),
                ('enabled_flag', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date_active', models.DateTimeField(blank=True, null=True)),
                ('end_date_active', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'core_lookupvalues',
            },
            managers=[
                ('active_records', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('user', models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('user_name', models.CharField(default='', max_length=240)),
                ('employee_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('company', models.CharField(blank=True, max_length=240, null=True)),
                ('department', models.CharField(blank=True, max_length=240, null=True)),
                ('description', models.CharField(blank=True, max_length=240, null=True)),
                ('title', models.CharField(blank=True, max_length=240, null=True)),
                ('telephoneNumber', models.CharField(blank=True, max_length=240, null=True)),
                ('homePhone', models.CharField(blank=True, max_length=240, null=True)),
                ('photo_main', models.ImageField(blank=True, null=True, upload_to='user')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('organization_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('business_group_id', models.IntegerField(blank=True, default=0, null=True)),
                ('enable_date', models.DateField(blank=True, null=True)),
                ('disable_date', models.DateField(blank=True, null=True)),
                ('organization_code', models.CharField(blank=True, max_length=5, null=True)),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_enabled_flag', models.CharField(blank=True, max_length=225, null=True)),
                ('recv_location', models.CharField(blank=True, max_length=500, null=True)),
                ('inv_org_address', models.CharField(blank=True, max_length=2000, null=True)),
                ('inv_location', models.CharField(blank=True, max_length=255, null=True)),
                ('org_type', models.CharField(blank=True, max_length=240, null=True)),
                ('location_id', models.IntegerField(blank=True, null=True)),
                ('set_of_books_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.glledger')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InvChatterMsgLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('line_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=240, null=True)),
                ('doc_type', models.CharField(blank=True, max_length=240, null=True)),
                ('doc_no', models.CharField(blank=True, max_length=240, null=True)),
                ('msg_content', models.CharField(blank=True, max_length=240, null=True)),
                ('msg_type', models.CharField(blank=True, max_length=240, null=True)),
                ('removed_flag', models.CharField(blank=True, max_length=240, null=True)),
                ('doc_upload_type', models.CharField(blank=True, max_length=240, null=True)),
                ('reference', models.CharField(blank=True, max_length=240, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'db_table': 'inv_chatter_msg_lines',
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('name', models.CharField(max_length=256)),
                ('location', models.CharField(max_length=256)),
                ('time', models.CharField(max_length=256)),
                ('additional_text', models.TextField()),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('name', models.CharField(max_length=50)),
                ('identifier', models.CharField(blank=True, max_length=240, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('attribute1', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute2', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute3', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute4', models.CharField(blank=True, max_length=240, null=True)),
                ('attribute5', models.CharField(blank=True, max_length=240, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('full_name', models.CharField(max_length=240)),
                ('employee_number', models.CharField(blank=True, max_length=100, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('user_name', models.CharField(max_length=100, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Emirates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emirates')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('file', models.BinaryField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Pending'), (2, 'Processing'), (3, 'Successful'), (4, 'Failed')])),
                ('period', models.DateField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('department_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DataDictionarySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('model_name', models.CharField(max_length=200, verbose_name='Model name')),
                ('section_name', models.CharField(max_length=200)),
                ('view_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ColumnSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('model', models.CharField(max_length=150)),
                ('display_indexes', models.CharField(max_length=255)),
                ('fk_user_id', models.BigIntegerField()),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ARLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('loc_code', models.CharField(max_length=250)),
                ('location_name', models.CharField(blank=True, max_length=250, null=True)),
                ('org_id', models.IntegerField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='APILog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('url', models.CharField(max_length=250)),
                ('method', models.CharField(max_length=50)),
                ('request_body', models.TextField(blank=True, null=True)),
                ('response_code', models.CharField(blank=True, max_length=50, null=True)),
                ('response_body', models.TextField(blank=True, null=True)),
                ('serverside_errors', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('name', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('category', models.CharField(max_length=256)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LookupName',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('lookup_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('lookup_field_name', models.CharField(max_length=100)),
                ('lookup_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=240, null=True)),
                ('fk_app_id', models.IntegerField()),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LookupNameValue',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('lookup_value_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=30)),
                ('meaning', models.CharField(max_length=240)),
                ('description', models.CharField(max_length=240, null=True)),
                ('tag', models.CharField(max_length=100, null=True)),
                ('lookup_type', models.CharField(max_length=100, null=True)),
                ('order', models.IntegerField(null=True)),
                ('attribute1', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute2', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute3', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute4', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute5', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute6', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute7', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute8', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute9', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute10', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute11', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute12', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute13', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute14', models.CharField(blank=True, max_length=150, null=True)),
                ('attribute15', models.CharField(blank=True, max_length=150, null=True)),
                ('fk_lookup_id', models.ForeignKey(db_column='fk_lookup_id', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='core.lookupname')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NavigationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('name', models.CharField(max_length=50)),
                ('url', models.TextField(blank=True, null=True)),
                ('sort_by', models.SmallIntegerField(blank=True, null=True)),
                ('is_menu_item', models.BooleanField(default=True)),
                ('icon_class', models.CharField(blank=True, max_length=240, null=True)),
                ('color_class', models.CharField(blank=True, max_length=240, null=True)),
                ('filter_type', models.CharField(blank=True, max_length=240, null=True)),
                ('username_required', models.BooleanField(default=False)),
                ('additional_query', models.CharField(blank=True, max_length=512, null=True)),
                ('href', models.TextField(blank=True, null=True)),
                ('org_id_required', models.BooleanField(default=False)),
                ('base_org', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.navigationitem')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DataDictionary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('data_name', models.CharField(max_length=240, verbose_name='db column name')),
                ('display_name', models.CharField(blank=True, max_length=240, null=True, verbose_name='Display name')),
                ('is_required', models.BooleanField(default=False)),
                ('is_disabled', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('display_class', models.CharField(blank=True, max_length=500, null=True)),
                ('display_order_by', models.IntegerField(blank=True, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('field_type', models.CharField(max_length=100, null=True, verbose_name='input field type')),
                ('model_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Model name')),
                ('section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.datadictionarysection')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
                ('navigation_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.navigationitem')),
            ],
            options={
                'ordering': ('display_order_by',),
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OperatingUnit',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('operating_unit_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('business_group_id', models.IntegerField()),
                ('date_from', models.DateField()),
                ('date_to', models.DateField(blank=True, null=True)),
                ('short_code', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=255)),
                ('default_legal_context_id', models.CharField(max_length=225)),
                ('usable_flag', models.CharField(max_length=225)),
                ('ledger_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.glledger')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='operating_unit_id',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.operatingunit'),
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('party_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('party_name', models.TextField(null=True, verbose_name='Contact Name')),
                ('party_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Number')),
                ('person_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Title')),
                ('person_first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='First Name')),
                ('person_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last Name')),
                ('mobile_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='Mobile Number')),
                ('tel_no', models.CharField(blank=True, max_length=150, null=True, verbose_name='Telephone Number')),
                ('email_address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Email Address')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('full_access', models.BooleanField(default=False)),
                ('read_access', models.BooleanField(default=False)),
                ('edit_access', models.BooleanField(default=False)),
                ('create_access', models.BooleanField(default=False)),
                ('delete_access', models.BooleanField(default=False)),
                ('employee_role', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employeerole')),
                ('navigation_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permissions', to='core.navigationitem')),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TableConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('table_identifier', models.CharField(max_length=256)),
                ('table_description', models.TextField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TableColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('column_header', models.CharField(max_length=256)),
                ('column_data_field', models.CharField(max_length=256)),
                ('column_description', models.TextField(blank=True, null=True)),
                ('column_order', models.PositiveIntegerField(blank=True, null=True)),
                ('tenant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory')),
                ('table', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='core.tableconfiguration')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserOrganisationInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(auto_now=True, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('inventory', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory', verbose_name='Organization')),
                ('operating_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.operatingunit', verbose_name='Company')),
                ('role', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employeerole')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='User name')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalUserOrganisationInventory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=240, null=True)),
                ('last_update_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('last_updated_by', models.CharField(blank=True, max_length=240, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.employeerole')),
                ('inventory', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.inventory', verbose_name='Organization')),
                ('operating_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.operatingunit', verbose_name='Company')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.userprofile', verbose_name='User name')),
            ],
            options={
                'verbose_name': 'historical user organisation inventory',
                'verbose_name_plural': 'historical user organisation inventorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
